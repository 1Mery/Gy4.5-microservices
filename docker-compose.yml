version: "3.8"

networks:
  microservices-net:

volumes:
  postgres_data:
  kafka_data:

services:
  config-server:
    build: ./config-server
    image: meryemozevren/turkcell-45-config-server
    container_name: config-server
    ports:
      - "8066:8989"
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://0.0.0.0:8989/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  discovery-server:
    build: ./discovery-server
    image: meryemozevren/turkcell-45-discovery-server
    container_name: discovery-server
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - "8761:8761"
    environment:
      - CONFIG_URI=http://config-server:8989
    networks:
      - microservices-net

  gateway-server:
    build: ./gateway-server
    image: meryemozevren/turkcell-45-gateway-server
    container_name: gateway-server
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_started
    ports:
      - "8888:8888"
    environment:
      - CONFIG_URI=http://config-server:8989
      - EUREKA_URI=http://discovery-server:8761/eureka/
    networks:
      - microservices-net

  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: productdb
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-net

  kafka:
    image: apache/kafka:3.8.0
    container_name: kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: "1"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_NUM_PARTITIONS: "3"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
      CLUSTER_ID: "5L6g3nShT-eMCtK--X86sw"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - microservices-net

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8079:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
    networks:
      - microservices-net

  product-service:
    build: ./product-service
    image: meryemozevren/turkcell-45-product-service
    container_name: product-service
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_started
      postgres:
        condition: service_started
      kafka:
        condition: service_started
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_URI=http://config-server:8989
      - EUREKA_URI=http://discovery-server:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      # PostgreSQL bağlantı bilgilerini netleştirmek için ek
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/productdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    networks:
      - microservices-net


  order-service:
    build: ./order-service
    image: meryemozevren/turkcell-45-order-service
    container_name: order-service
    depends_on:
      - config-server
      - discovery-server
      - kafka
    ports:
      - "8082:8082"
    environment:
      - CONFIG_URI=http://config-server:8989
      - EUREKA_URI=http://discovery-server:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - microservices-net

  cart-service:
    build: ./cart-service
    image: meryemozevren/turkcell-45-cart-service
    container_name: cart-service
    depends_on:
      - config-server
      - discovery-server
      - kafka
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - microservices-net

  payment-service:
    build: ./payment-service
    image: meryemozevren/turkcell-45-payment-service
    container_name: payment-service
    depends_on:
      - config-server
      - discovery-server
      - kafka
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - microservices-net
